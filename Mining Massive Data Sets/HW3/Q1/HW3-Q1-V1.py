# -*- coding: utf-8 -*-
"""
Created on Mon Feb 15 15:05:02 2016

@author: mravi
"""

import random
import numpy as np
import matplotlib.pyplot as plt

lambda_val=0.2
k=20
iterat=40
error_array=[]

#file read
input_file=open("/Users/mravi/Desktop/C/MMDS - Sta/HW/HW3/Q1/hw3-recommendations/ratings.train.txt", 'r')
max_user=0
max_item=0
for l in input_file:
    dat=l.strip().split('\t')
    if int(dat[0])>max_user:
        max_user=int(dat[0])
    if int(dat[1])>max_item:
        max_item=int(dat[1])
p=['dummy']
q=['dummy']

for x in range(max_user):
    p_row=[random.random()*((float(5)/k)**0.5) for pu in range(k)]
    p.append(p_row)

for y in range(max_item):
    q_row=[random.random()*((float(5)/k)**0.5) for qi in range(k)]
    q.append(q_row)
input_file.close()



#update logic
for x in range(iterat):
    eta=0.025
    inp_file1=open("/Users/mravi/Desktop/C/MMDS - Sta/HW/HW3/Q1/hw3-recommendations/ratings.train.txt", 'r')
    for l in inp_file1:
        dat=l.strip().split('\t')
        user_id=int(dat[0])
        movie_id=int(dat[1])
        rat=int(dat[2])
        e_iu=rat-np.dot(p[user_id],q[movie_id])
        pu_new=[]        
        qi_new=[]
        for a in range(k):
            pu_new.append(p[user_id][a]+eta*(e_iu*q[movie_id][a]-lambda_val*p[user_id][a]))
            qi_new.append(q[movie_id][a]+eta*(e_iu*p[user_id][a]-lambda_val*q[movie_id][a]))
        
        p[user_id]=pu_new
        q[movie_id]=qi_new
    inp_file1.close()    
    #E calculation
    E=0
    inp_file2=open("/Users/mravi/Desktop/C/MMDS - Sta/HW/HW3/Q1/hw3-recommendations/ratings.train.txt", 'r')
    for l in inp_file2:
        dat=l.strip().split('\t')
        user_id=int(dat[0])
        movie_id=int(dat[1])
        rat=int(dat[2])
        E=E+(rat-np.dot(p[user_id],q[movie_id]))**2
    inp_file2.close()
    
    pu_norm,qi_norm=0.0,0.0
    for i in range(1,len(p)):
        pu_norm=pu_norm+(np.linalg.norm(p[i]))** 2
    for i in range(1,len(q)):
        qi_norm=qi_norm+(np.linalg.norm(q[i])) ** 2
    E=E+lambda_val*(pu_norm+qi_norm)
    error_array.append(E)
plt.plot(error_array)
plt.ylabel('Error')
plt.show()
#>>> error_array for eta=0.1
#[120979.64038414494, 120010.37412948828, 117903.07140066002, 116221.69668585647, 115264.67387530379, 114569.2840061607, 113964.00190240247, 113422.14726436711, 112951.26265027224, 112553.37284010391, 112221.15492274295, 111943.76654384067, 111710.95546910986, 111514.3439699484, 111347.35706599896, 111204.81610733148, 111082.57264042334, 110977.25047410074, 110886.07345197091, 110806.74703828151, 110737.37154982485, 110676.37444555116, 110622.4551022708, 110574.53869621521, 110531.73734816725, 110493.31738409562, 110458.67186557822, 110427.29768098505, 110398.77656356108, 110372.75946023577, 110348.95373071502, 110327.11271380662, 110307.02725619506, 110288.51885542118, 110271.43412206299, 110255.6403141803, 110241.02173955998, 110227.47685782581, 110214.91594543008, 110203.25921229989]
#>>> error_array for eta=0.05
#[96490.012136550111, 96029.746812925849, 95793.345782599092, 95305.889970780525, 94412.879532554289, 93286.410488689711, 92285.270618081544, 91541.462255684222, 90997.934736796451, 90576.269634535915, 90223.752567551666, 89910.088791437462, 89619.259596295393, 89344.112437751755, 89082.930572119847, 88836.884041560435, 88608.026393381151, 88397.950676180772, 88207.185230528281, 88035.179768139758, 87880.602189530618, 87741.70251921039, 87616.610757704519, 87503.530537214087, 87400.840977633779, 87307.134664289799, 87221.217754142315, 87142.090941592338, 87068.9229542299, 87001.023067052563, 86937.815813709196, 86878.819149132774, 86823.626290709537, 86771.890971932356, 86723.315647096577, 86677.642145302743, 86634.64430556407, 86594.12218742707, 86555.897520689759, 86519.810122593393]
#>>> error_array for eta=0.025
#[88674.609039785748, 87291.043619020056, 86966.769635745208, 86812.258182119273, 86672.200384552285, 86490.332146901404, 86231.823981425754, 85873.93669980354, 85414.392090014211, 84879.875058187681, 84319.376378082379, 83782.387289019811, 83300.225655616712, 82882.941717316338, 82526.6285342583, 82221.555225707532, 81957.137685227615, 81724.069430613832, 81514.893631294224, 81323.92318787532, 81146.958364360966, 80980.983076740944, 80823.897639205519, 80674.297505296214, 80531.292424837899, 80394.358367737586, 80263.216612007032, 80137.736779271232, 80017.861980259375, 79903.554463807683, 79794.759651773871, 79691.385724186184, 79593.295406072488, 79500.306492877658, 79412.197929763643, 79328.718808361678, 79249.59830720436, 79174.555248400997, 79103.306491571959, 79035.573802991552]